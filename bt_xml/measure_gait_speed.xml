<?xml version="1.0"?>
<root main_tree_to_execute="BehaviorTree">
    <!-- ////////// -->
    <BehaviorTree ID="BehaviorTree">
        <Sequence>
            <Timeout msec="15000">
                <SubTree ID="find_patient_rotating" __shared_blackboard="true"/>
            </Timeout>
            <SubTree ID="check_test_started" __shared_blackboard="true"/>
            <SubTree ID="gait_speed_dist" __shared_blackboard="true"/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="check_test_started">
        <Timeout msec="20000">
            <RetryUntilSuccessful num_attempts="-1">
                <ReactiveFallback>
                    <Condition ID="HasPersonStarted" min_distance="0.2"/>
                    <Timeout msec="1000">
                        <ForceFailure>
                            <Action ID="Speak" param="" say_text="Comienza a caminar"/>
                        </ForceFailure>
                    </Timeout>
                </ReactiveFallback>
            </RetryUntilSuccessful>
        </Timeout>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="find_patient_rotating">
        <ReactiveFallback>
            <Condition ID="IsInFront" confidence="0.6" direction="{dir}" entity_to_identify="patient" target="" what=""/>
            <Action ID="Spin" angle="{dir}" forever="true" speed="0.5"/>
        </ReactiveFallback>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="find_waving_person">
        <Fallback>
            <Timeout msec="15000">
                <ReactiveFallback>
                    <Action ID="IsWaving" cam_frame="head_front_camera_link_color_optical_frame" person_frame="{tf_patient}"/>
                    <Action ID="Pan" period="10" pitch_angle="0" range="45"/>
                </ReactiveFallback>
            </Timeout>
            <ReactiveFallback>
                <Action ID="IsWaving" cam_frame="head_front_camera_link_color_optical_frame" person_frame="{tf_person}"/>
                <Action ID="Spin" angle="" forever="" speed=""/>
            </ReactiveFallback>
        </Fallback>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="gait_speed_dist">
        <Sequence>
            <Action ID="StartTest"/>
            <ReactiveSequence>
                <ReactiveFallback>
                    <Timeout msec="3000">
                        <SubTree ID="find_patient_rotating" __shared_blackboard="true"/>
                    </Timeout>
                    <Action ID="NavigateTo" distance_tolerance="0.5" tf_frame="patient" will_finish="yes" x="" y=""/>
                </ReactiveFallback>
                <Action ID="CheckEndTest"/>
                <Action ID="Speak" param="{result}" say_text="Has tardado [] segundos en completar la prueba"/>
                <Action ID="EndTest" time="{result}"/>
            </ReactiveSequence>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <BehaviorTree ID="gait_speed_dist_following">
        <Sequence>
            <ReactiveSequence>
                <Inverter>
                    <Condition ID="TargetReached"/>
                </Inverter>
                <Action ID="FollowPerson"/>
            </ReactiveSequence>
            <Action ID="EndTest" time=""/>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="CheckEndTest"/>
        <Action ID="DialogConfirmation">
            <input_port default="en" name="language"/>
        </Action>
        <Action ID="EndTest">
            <output_port name="time">Time needed to complete the gait speed test</output_port>
        </Action>
        <Action ID="FilterEntity">
            <inout_port name="frame"/>
            <inout_port name="lambda"/>
        </Action>
        <Action ID="FollowPerson"/>
        <Condition ID="HasPersonStarted">
            <input_port default="0.2" name="min_distance"/>
        </Condition>
        <Action ID="Identify">
            <input_port name="detection"/>
            <input_port name="entity_to_identify"/>
        </Action>
        <Action ID="IdentifyPerson">
            <input_port name="get_features"/>
            <input_port name="person_to_identify"/>
        </Action>
        <Condition ID="IsDetected">
            <input_port default="0.6" name="confidence"/>
            <output_port name="frames"/>
            <input_port default="person" name="interest"/>
            <input_port default="2" name="max_depth"/>
            <input_port default="1" name="max_entities"/>
            <input_port default="depth_nearest" name="order"/>
        </Condition>
        <Condition ID="IsInFront">
            <input_port name="confidence"/>
            <output_port name="direction"/>
            <input_port name="entity_to_identify"/>
            <input_port name="target"/>
            <input_port name="what"/>
        </Condition>
        <Action ID="IsPointing">
            <input_port name="camera_frame"/>
            <input_port name="high_pointing_limit"/>
            <input_port name="low_pointing_limit"/>
            <input_port name="output_frame"/>
            <output_port name="pointing_direction"/>
        </Action>
        <Action ID="IsWaving">
            <input_port name="cam_frame"/>
            <output_port name="person_frame"/>
        </Action>
        <Action ID="Listen">
            <inout_port name="listened_text"/>
        </Action>
        <Action ID="LookAt">
            <inout_port name="tf_frame"/>
        </Action>
        <Action ID="MoveTo">
            <input_port name="distance_tolerance"/>
            <input_port name="is_truncated"/>
            <input_port name="tf_frame"/>
        </Action>
        <Action ID="NavigateTo">
            <input_port name="distance_tolerance"/>
            <input_port name="tf_frame"/>
            <input_port name="will_finish"/>
            <input_port name="x"/>
            <input_port name="y"/>
        </Action>
        <Action ID="Pan">
            <inout_port name="period"/>
            <inout_port name="pitch_angle"/>
            <inout_port name="range"/>
        </Action>
        <Action ID="PublishCurrentInterestPose">
            <input_port name="interest">Current interest of the robot. A static transform in relation to odom will be published</input_port>
        </Action>
        <Action ID="Speak">
            <input_port name="param"/>
            <input_port name="say_text"/>
        </Action>
        <Action ID="Spin">
            <input_port name="angle"/>
            <input_port name="forever"/>
            <input_port name="speed"/>
        </Action>
        <Action ID="StartTest"/>
        <Condition ID="TargetReached"/>
        <SubTree ID="check_test_started">
            <input_port default="true" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="confirm"/>
        <SubTree ID="confirm_old">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="find_patient_rotating">
            <input_port default="true" name="__shared_blackboard">If false  , the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="find_person"/>
        <SubTree ID="find_person_rotating">
            <input_port default="true" name="__shared_blackboard">If false  , the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="find_waving_person"/>
        <SubTree ID="find_waving_person_rotating"/>
        <SubTree ID="gait_speed_dist">
            <input_port default="true" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="gait_speed_dist_following">
            <input_port default="false" name="__shared_blackboard">If false (default), the Subtree has an isolated blackboard and needs port remapping</input_port>
        </SubTree>
        <SubTree ID="listen"/>
    </TreeNodesModel>
    <!-- ////////// -->
</root>
